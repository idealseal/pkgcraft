name: CI

on:
  push:
    branches-ignore: [deploy]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust-version: ['1.56.0', '1.57.0']

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Update deps
      run: cargo update

    - name: Set up rust cache
      uses: actions/cache@v2
      id: cache
      with:
        path: |
          ~/.cargo/bin
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db
          ~/.rustup
          target
        key: v1-${{ github.job }}-${{ runner.os }}-rust-${{ matrix.rust-version }}-cargo-${{ hashFiles('Cargo.lock') }}
        restore-keys: v1-${{ github.job }}-${{ runner.os }}-rust-${{ matrix.rust-version }}-cargo-

    - name: Set up rust toolchain ${{ matrix.rust-version }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust-version }}
        profile: minimal
        override: true
        components: rustfmt

    - name: Run tests
      run: cargo test

  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust-version: ['1.57.0']

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust-version }}
        profile: minimal
        override: true
        components: clippy, rustfmt

    - name: Run rustfmt
      run: cargo fmt --all -- --check

    - name: Update deps
      run: cargo update

    - name: Set up rust cache
      uses: actions/cache@v2
      id: cache
      with:
        path: |
          ~/.cargo/bin
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db
          ~/.rustup
          target
        key: v1-${{ github.job }}-${{ runner.os }}-rust-${{ matrix.rust-version }}-cargo-${{ hashFiles('Cargo.lock') }}
        restore-keys: v1-${{ github.job }}-${{ runner.os }}-rust-${{ matrix.rust-version }}-cargo-

    - name: Run clippy
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

  bench:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust-version: ['1.57.0']

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Update deps
      run: cargo update

    - name: Set up rust cache
      uses: actions/cache@v2
      id: cache
      with:
        path: |
          ~/.cargo/bin
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db
          ~/.rustup
          target
        key: v1-${{ github.job }}-${{ runner.os }}-rust-${{ matrix.rust-version }}-cargo-${{ hashFiles('Cargo.lock') }}
        restore-keys: v1-${{ github.job }}-${{ runner.os }}-rust-${{ matrix.rust-version }}-cargo-

    - name: Set up rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust-version }}
        profile: minimal
        override: true
        components: rustfmt

    - name: Install cargo-criterion
      if: steps.cache.outputs.cache-hit != 'true'
      run: cargo install cargo-criterion

    - name: Run benchmarks
      run: cargo criterion --no-run
