name: pkgcruft-release

on:
  push:
    tags: [pkgcruft-*]
    branches: ['**']
    paths:
      - ".github/workflows/pkgcruft-release.yml"
  workflow_dispatch:

jobs:
  shell:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Determine MSRV
      id: msrv
      run: |
        min_ver=$(sed -rn '/^rust-version\s*=/ s/^.*=\s*"([0-9](\.[0-9]+)+)(.*)/\1/p' Cargo.toml)
        if [[ -n ${min_ver} ]]; then
          echo "rust-version=${min_ver}" >> $GITHUB_OUTPUT
        else
          exit 1
        fi

    - name: Set up rust toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ steps.msrv.outputs.rust-version }}

    - name: Generate files
      run: cargo run --features shell --bin pkgcruft-shell-comp -p pkgcruft

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: shell
        path: shell
        if-no-files-found: error
        retention-days: 3

  source:
    if: startsWith(github.ref, 'refs/tags/')
    needs: ["shell"]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout pkgcraft workspace
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Determine MSRV
      id: msrv
      run: |
        min_ver=$(sed -rn '/^rust-version\s*=/ s/^.*=\s*"([0-9](\.[0-9]+)+)(.*)/\1/p' Cargo.toml)
        if [[ -n ${min_ver} ]]; then
          echo "rust-version=${min_ver}" >> $GITHUB_OUTPUT
        else
          exit 1
        fi

    - name: Set up rust toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ steps.msrv.outputs.rust-version }}

    - name: Create vendored release
      run: .ci/vendor-release pkgcruft

    - name: Download shell completion
      uses: actions/download-artifact@v4
      with:
        name: shell
        path: shell

    - name: Create archive
      run: |
        # move shell completion files into the release
        mv shell ${{ github.ref_name }}
        # create the release tarball
        tar -cv -I "xz -9 -T0" -f ${{ github.ref_name }}.tar.xz ${{ github.ref_name }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: source
        path: ./*.tar.xz
        if-no-files-found: error
        retention-days: 3

  linux:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - powerpc64-unknown-linux-gnu
          - powerpc64le-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl

    steps:
    - name: Checkout pkgcraft workspace
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Determine MSRV
      id: msrv
      run: |
        min_ver=$(sed -rn '/^rust-version\s*=/ s/^.*=\s*"([0-9](\.[0-9]+)+)(.*)/\1/p' Cargo.toml)
        if [[ -n ${min_ver} ]]; then
          echo "rust-version=${min_ver}" >> $GITHUB_OUTPUT
        else
          exit 1
        fi

    - name: Set up rust toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ steps.msrv.outputs.rust-version }}

    - name: Install cross
      run: cargo install cross --git https://github.com/cross-rs/cross

    - name: Build pkgcruft
      run: cross build --target ${{ matrix.target }} --profile release-strip -p pkgcruft

    - name: Create archive
      run: |
        tar -C target/${{ matrix.target }}/release-strip \
          -cv -I "xz -9 -T0" -f ${{ github.ref_name }}-${{ matrix.target }}.tar.xz \
          pkgcruft

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.ref_name }}-${{ matrix.target }}
        path: ./*.tar.xz
        if-no-files-found: error
        retention-days: 3

  publish:
    if: startsWith(github.ref, 'refs/tags/')
    needs: ["source", "linux"]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        merge-multiple: true

    - name: Create GitHub release
      uses: softprops/action-gh-release@v2
      with:
        files: artifacts/*.tar.xz
        fail_on_unmatched_files: true
