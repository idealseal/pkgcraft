name: pkgcraft-c

on:
  push:
    branches: [main, pkgcraft-c]
    paths:
      - "Cargo.*"
      - "crates/scallop/**"
      - "crates/pkgcraft/**"
      - "crates/pkgcraft-c/**"
      - ".github/workflows/pkgcraft-c.yml"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
    - name: Checkout pkgcraft workspace
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Set pkgcraft dir env
      run: echo pkgcraft_dir=~/pkgcraft >> $GITHUB_ENV

    - name: Set up rust toolchain
      uses: dtolnay/rust-toolchain@stable
      id: rust

    - name: Restore cache
      uses: actions/cache/restore@v3
      id: restore-cache
      with:
        path: |
          ~/.cargo/bin
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db
          target
        key: ${{ github.job }}-${{ runner.os }}-rust-${{ steps.rust.outputs.cachekey }}-cargo-${{ hashFiles('Cargo.lock') }}
        restore-keys: ${{ github.job }}-${{ runner.os }}-rust-

    - name: Install cargo-c via binary package on Linux
      if: runner.os == 'Linux'
      run: curl -L https://github.com/lu-zero/cargo-c/releases/latest/download/cargo-c-x86_64-unknown-linux-musl.tar.gz | tar xvzf - -C ~/.cargo/bin

    - name: Install cargo-c via binary package on MacOS
      if: runner.os == 'macOS'
      run: |
        curl -L https://github.com/lu-zero/cargo-c/releases/latest/download/cargo-c-macos.zip > cargo-c.zip
        unzip -o cargo-c.zip -d ~/.cargo/bin
        rm cargo-c.zip

    - name: Build C library
      run: |
        cargo cinstall --version
        cargo cinstall --prefix="${pkgcraft_dir}" --pkgconfigdir="${pkgcraft_dir}" -p pkgcraft-c
        echo "PKG_CONFIG_PATH=${pkgcraft_dir}" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=${pkgcraft_dir}/lib" >> $GITHUB_ENV
        echo "DYLD_LIBRARY_PATH=${pkgcraft_dir}/lib" >> $GITHUB_ENV

    - name: Upload build artifacts
      if: github.ref_name == 'main'
      uses: actions/upload-artifact@v3
      with:
        name: pkgcraft-c-${{ runner.os }}
        path: ${{ env.pkgcraft_dir }}
        if-no-files-found: error

    - name: Save cache
      if: ${{ github.ref_name == 'main' && steps.restore-cache.outputs.cache-hit != true }}
      uses: actions/cache/save@v3
      with:
        path: |
          ~/.cargo/bin
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db
          target
        key: ${{ steps.restore-cache.outputs.cache-primary-key }}

  pkgcraft-python:
    needs: build
    uses: pkgcraft/pkgcraft-python/.github/workflows/ci.yml@main
    secrets: inherit
    with:
      python-version: '3.x'

  pkgcraft-go:
    needs: build
    uses: pkgcraft/pkgcraft-go/.github/workflows/ci.yml@main
    secrets: inherit
    with:
      go-version: 'stable'
